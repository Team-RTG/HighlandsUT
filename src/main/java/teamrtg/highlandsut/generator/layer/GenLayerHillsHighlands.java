package teamrtg.highlandsut.generator.layer;

import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.GenLayerHills;
import net.minecraft.world.gen.layer.IntCache;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import teamrtg.highlandsut.biome.BiomeGenBaseHighlands;
import teamrtg.highlandsut.biome.HighlandsBiomes;

public class GenLayerHillsHighlands extends GenLayerHills
{
    private static final Logger logger = LogManager.getLogger();
    private GenLayer field_151628_d;
    private static final String __OBFID = "CL_00000563";

    public GenLayerHillsHighlands(long seed, GenLayer layer1, GenLayer layer2)
    {
        super(seed, layer1, layer2);
        this.parent = layer1;
        this.field_151628_d = layer2;
    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight)
    {
        int[] aint = this.parent.getInts(areaX - 1, areaY - 1, areaWidth + 2, areaHeight + 2);
        int[] aint1 = this.field_151628_d.getInts(areaX - 1, areaY - 1, areaWidth + 2, areaHeight + 2);
        int[] aint2 = IntCache.getIntCache(areaWidth * areaHeight);

        for (int i1 = 0; i1 < areaHeight; ++i1)
        {
            for (int j1 = 0; j1 < areaWidth; ++j1)
            {
                this.initChunkSeed((long)(j1 + areaX), (long)(i1 + areaY));
                int k1 = aint[j1 + 1 + (i1 + 1) * (areaWidth + 2)];
                int l1 = aint1[j1 + 1 + (i1 + 1) * (areaWidth + 2)];
                boolean flag = (l1 - 2) % 29 == 0;

                if (k1 > 255)
                {
                    logger.debug("old! " + k1);
                }

                if (k1 != 0 && l1 >= 2 && (l1 - 2) % 29 == 1 && k1 < 128)
                {
                    if (Biome.getBiome(k1 + 128) != null)
                    {
                        aint2[j1 + i1 * areaWidth] = k1 + 128;
                    }
                    else
                    {
                        aint2[j1 + i1 * areaWidth] = k1;
                    }
                }
                else if (this.nextInt(3) != 0 && !flag)
                {
                    aint2[j1 + i1 * areaWidth] = k1;
                }
                else
                {
                    int i2 = k1;
                    int j2;

                    if (k1 == Biome.desert.biomeID)
                    {
                        i2 = Biome.desertHills.biomeID;
                    }
                    else if (k1 == Biome.forest.biomeID)
                    {
                    	//Highlands code for bald hill as a sub of forest
                    	j2 = this.nextInt(2);

                        if (j2 == 0)
                        {
                        	i2 = Biome.forestHills.biomeID;
                        }
                        else
                        {
                            i2 = HighlandsBiomes.tropicalIslands == null ? Biome.forestHills.biomeID : HighlandsBiomes.baldHill.biomeID;
                        }
                    }
                    else if (k1 == Biome.birchForest.biomeID)
                    {
                        i2 = Biome.birchForestHills.biomeID;
                    }
                    else if (k1 == Biome.roofedForest.biomeID)
                    {
                        i2 = Biome.plains.biomeID;
                    }
                    else if (k1 == Biome.taiga.biomeID)
                    {
                        i2 = Biome.taigaHills.biomeID;
                    }
                    else if (k1 == Biome.megaTaiga.biomeID)
                    {
                        i2 = Biome.megaTaigaHills.biomeID;
                    }
                    else if (k1 == Biome.coldTaiga.biomeID)
                    {
                        i2 = Biome.coldTaigaHills.biomeID;
                    }
                    else if (k1 == Biome.plains.biomeID)
                    {
                    	if(this.nextInt(5) == 0){
	                        if (this.nextInt(3) == 0)
	                        {
	                            i2 = Biome.forestHills.biomeID;
	                        }
	                        else
	                        {
	                            i2 = Biome.forest.biomeID;
	                        }
                    	}
                    }
                    else if (k1 == Biome.icePlains.biomeID)
                    {
                        i2 = Biome.iceMountains.biomeID;
                    }
                    else if (k1 == Biome.jungle.biomeID)
                    {
                        i2 = Biome.jungleHills.biomeID;
                    }
                    else if (k1 == Biome.ocean.biomeID)
                    {
                        i2 = Biome.deepOcean.biomeID;
                    }
                    else if (k1 == Biome.extremeHills.biomeID)
                    {
                        i2 = Biome.extremeHillsPlus.biomeID;
                    }
                    else if (k1 == Biome.savanna.biomeID)
                    {
                        i2 = Biome.savannaPlateau.biomeID;
                    }
                    else if (biomesEqualOrMesaPlateau(k1, Biome.mesaPlateau_F.biomeID))
                    {
                        i2 = Biome.mesa.biomeID;
                    }
                    else if (k1 == Biome.deepOcean.biomeID && this.nextInt(5) == 0)
                    {
                        j2 = this.nextInt(5);

                        switch(j2){
                        case 0:
                        	i2 = Biome.plains.biomeID;
                        	break;
                        case 1:
                        	i2 = Biome.forest.biomeID;
                        	break;
                        case 2:
                        	i2 = Biome.jungle.biomeID;
                        	break;
                        case 3:
                        	i2 = Biome.desert.biomeID + 128;
                        	break;
                        case 4:
                        	i2 = HighlandsBiomes.tropicalIslands == null ? Biome.deepOcean.biomeID : HighlandsBiomes.tropicalIslands.biomeID;
                        	break;
                        default: 
                        	i2 = Biome.deepOcean.biomeID;
                        	break;
                        }
                    }
                    //Highlands code for any Highlands biome with subs
                    else if (Biome.getBiomeGenArray()[k1] instanceof BiomeGenBaseHighlands)
                    {
                    	BiomeGenBaseHighlands hlBiome = (BiomeGenBaseHighlands) Biome.getBiomeGenArray()[k1];
                    	if(hlBiome.subBiomes.size() > 0){
	                    	j2 = this.nextInt(hlBiome.subBiomes.size());
	                    	i2 = hlBiome.subBiomes.get(j2).biomeID;
                    	}
                    }

                    if (flag && i2 != k1)
                    {
                        if (Biome.getBiome(i2 + 128) != null)
                        {
                            i2 += 128;
                        }
                        else
                        {
                            i2 = k1;
                        }
                    }

                    if (i2 == k1)
                    {
                        aint2[j1 + i1 * areaWidth] = k1;
                    }
                    else
                    {
                        j2 = aint[j1 + 1 + (i1 + 1 - 1) * (areaWidth + 2)];
                        int k2 = aint[j1 + 1 + 1 + (i1 + 1) * (areaWidth + 2)];
                        int l2 = aint[j1 + 1 - 1 + (i1 + 1) * (areaWidth + 2)];
                        int i3 = aint[j1 + 1 + (i1 + 1 + 1) * (areaWidth + 2)];
                        int j3 = 0;

                        if (biomesEqualOrMesaPlateau(j2, k1))
                        {
                            ++j3;
                        }

                        if (biomesEqualOrMesaPlateau(k2, k1))
                        {
                            ++j3;
                        }

                        if (biomesEqualOrMesaPlateau(l2, k1))
                        {
                            ++j3;
                        }

                        if (biomesEqualOrMesaPlateau(i3, k1))
                        {
                            ++j3;
                        }

                        if (j3 >= 3)
                        {
                            aint2[j1 + i1 * areaWidth] = i2;
                        }
                        else
                        {
                            aint2[j1 + i1 * areaWidth] = k1;
                        }
                    }
                }
            }
        }

        return aint2;
    }
}